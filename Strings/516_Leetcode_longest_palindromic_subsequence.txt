class Solution {
    public int longestPalindromeSubseq(String s) {
        
        int n = s.length();

        int [][] arr = new int[n][n];

        for (int g=0; g<n; g++) {
            for (int i=0, j=g; j < n&&i<n; i++, j++) {
                
                if(g==0) {
                    arr[i][j] = 1;
                } else if (g ==1) {
                    if(s.charAt(i) == s.charAt(j)) {
                        arr[i][j] = 2;
                    } else {
                        arr[i][j] = 1;
                    }
                } else {
                    if(s.charAt(i) == s.charAt(j)) {
                         arr[i][j] = 2 + arr[i+1][j-1];
                    } else {
                        arr[i][j] = Math.max(arr[i][j -1], arr[i+1][j]);
                    }
                }
            }
        }
        return arr[0][n-1];
    }
}
